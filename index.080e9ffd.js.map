{"mappings":"ACEA,IAAM,EAAa,SAAS,aAAa,CAAC,WAEpC,EAAW,SAAS,aAAa,CAAC,SAElC,EAAa,EAAS,qBAAqB,GAE3C,EAAe,EAAW,qBAAqB,GAI/C,EAAkB,AAFL,OAAO,gBAAgB,CAAC,GAER,gBAAgB,CAAC,gBAEhD,EAAyB,GAIxB,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACC,AAHc,cAGF,QAAQ,CAAC,IACvB,CAAA,GAA0B,CAD5B,C,C,C,M,E,CADG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAML,IAAM,EAAa,AAAA,CAAA,EAAW,MAAM,CAAG,AAAiC,EAAjC,OAAO,EAA0B,EAAK,EAEvE,EAAa,AAAA,CAAA,EAAW,KAAK,CAAG,AAAiC,EAAjC,OAAO,EAA0B,EAAK,CAE5E,CAAA,EAAW,KAAK,CAAC,IAAI,CAAG,EAAY,EAAa,KAAK,CAAG,EAAI,KAE7D,EAAW,KAAK,CAAC,GAAG,CAAG,EAAY,EAAa,MAAM,CAAG,EAAI","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar spiderElem = document.querySelector(\".spider\");\nvar wallElem = document.querySelector(\".wall\");\nvar wallCoords = wallElem.getBoundingClientRect();\nvar spiderCoords = spiderElem.getBoundingClientRect();\nvar wallStyles = window.getComputedStyle(wallElem);\nvar wallBorderWidth = wallStyles.getPropertyValue(\"border-width\");\nvar unlttrdWallBorderWidth = \"\";\nvar neededSigns = \"0123456789.\";\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = wallBorderWidth[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var sign = _step.value;\n        if (neededSigns.includes(sign)) unlttrdWallBorderWidth += sign;\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar wallCntrY = (wallCoords.height - Number(unlttrdWallBorderWidth) * 2) / 2;\nvar wallCntrX = (wallCoords.width - Number(unlttrdWallBorderWidth) * 2) / 2;\nspiderElem.style.left = wallCntrX - spiderCoords.width / 2 + \"px\";\nspiderElem.style.top = wallCntrY - spiderCoords.height / 2 + \"px\";\n\n//# sourceMappingURL=index.080e9ffd.js.map\n","'use strict';\n\nconst spiderElem = document.querySelector('.spider');\n\nconst wallElem = document.querySelector('.wall');\n\nconst wallCoords = wallElem.getBoundingClientRect();\n\nconst spiderCoords = spiderElem.getBoundingClientRect();\n\nconst wallStyles = window.getComputedStyle(wallElem);\n\nconst wallBorderWidth = wallStyles.getPropertyValue('border-width');\n\nlet unlttrdWallBorderWidth = '';\n\nconst neededSigns = '0123456789.';\n\nfor (const sign of wallBorderWidth) {\n  if (neededSigns.includes(sign)) {\n    unlttrdWallBorderWidth += sign;\n  }\n}\n\nconst wallCntrY = (wallCoords.height - Number(unlttrdWallBorderWidth) * 2) / 2;\n\nconst wallCntrX = (wallCoords.width - Number(unlttrdWallBorderWidth) * 2) / 2;\n\nspiderElem.style.left = wallCntrX - spiderCoords.width / 2 + 'px';\n\nspiderElem.style.top = wallCntrY - spiderCoords.height / 2 + 'px';\n"],"names":["spiderElem","document","querySelector","wallElem","wallCoords","getBoundingClientRect","spiderCoords","wallBorderWidth","wallStyles","window","getComputedStyle","getPropertyValue","unlttrdWallBorderWidth","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","sign","value","neededSigns","includes","err","return","wallCntrY","height","Number","wallCntrX","width","style","left","top"],"version":3,"file":"index.080e9ffd.js.map"}